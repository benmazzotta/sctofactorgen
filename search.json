[{"path":"https://benmazzotta.github.io/sctofactorgen/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 sctofactorgen authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/articles/sctofactorgen.html","id":"surveycto-factor-generator","dir":"Articles","previous_headings":"","what":"SurveyCTO Factor Generator","title":"sctofactorgen","text":"package wrangles categorical variables SurveyCTO. language R, categorical variables factors levels labels.","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/articles/sctofactorgen.html","id":"motivation","dir":"Articles","previous_headings":"SurveyCTO Factor Generator","what":"Motivation","title":"sctofactorgen","text":"SurveyCTO one widely used survey platforms world. Based ODK, helps users collect clean tidy data efficiently. desktop software integrates nicely Stata, Excel, SPSS. package offers direct access labeled survey datasets SurveyCTO API, rather workaround importing SPSS Stata files R.","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/articles/sctofactorgen.html","id":"pre-flight-check","dir":"Articles","previous_headings":"SurveyCTO Factor Generator","what":"Pre-flight check","title":"sctofactorgen","text":"need access SurveyCTO server work. Store plaintext file. servername username password See rsurveycto package details.","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/articles/sctofactorgen.html","id":"api-access","dir":"Articles","previous_headings":"SurveyCTO Factor Generator","what":"API access","title":"sctofactorgen","text":"{rsurveycto} package offers several methods pull data forms server via API. first one requires authorization block. Note store memory session. function returns boolean TRUE confirm ’ve saved authentication block correctly. form need?","code":"library(rsurveycto) auth <- scto_auth(\"./auth_details\") check_scto_api() #> [1] TRUE cat(\"How many forms do we have on the server?\") #> How many forms do we have on the server? scto_catalog(auth) |> nrow() #> ✔ Reading metadata for server `sctofactorgen`. #> [1] 1  cat(\"Which one is for github?\") #> Which one is for github? scto_catalog(auth) |> filter(str_detect(title, \"github\")) #> ✔ Reading metadata for server `sctofactorgen`. #> Key: <type, id, title, version, group_id, group_title> #>      type              id           title    version group_id #>    <char>          <char>          <char>      <num>    <int> #> 1:   form demo_for_github demo_for_github 2404261415        1 #>                                    group_title #>                                         <char> #> 1: The root or home group (outside all groups)"},{"path":"https://benmazzotta.github.io/sctofactorgen/articles/sctofactorgen.html","id":"labels-with-sctofactorgen","dir":"Articles","previous_headings":"SurveyCTO Factor Generator","what":"Labels with {sctofactorgen}","title":"sctofactorgen","text":"Everything else can done sctofactorgen. Load response data. Load questionnaire. Read choices. Read questions. Attach variable labels single selects. Attach variable labels multi selects. Convert single selects factor levels. Convert multi selects integers. Attach variable labels single selects. Attach variable labels multi selects.","code":"df <- scto_responses(.formid = \"demo_for_github\")  #> ✔ Reading metadata for server `sctofactorgen`. #> ✔ Reading form `demo_for_github`. glimpse(df[,1:20]) #> Rows: 11 #> Columns: 20 #> $ CompletionDate    <dttm> 2024-04-26 18:13:43, 2024-04-26 18:15:51, 2024-04-2… #> $ SubmissionDate    <dttm> 2024-04-26 18:13:43, 2024-04-26 18:15:51, 2024-04-2… #> $ starttime         <dttm> 2024-04-26 18:13:19, 2024-04-26 18:13:45, 2024-04-2… #> $ endtime           <dttm> 2024-04-26 18:13:42, 2024-04-26 18:15:51, 2024-04-2… #> $ deviceid          <chr> \"(web)\", \"(web)\", \"(web)\", \"(web)\", \"(web)\", \"(web)\"… #> $ device_info       <chr> \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebK… #> $ duration          <chr> \"23\", \"126\", \"18\", \"22\", \"16\", \"18\", \"17\", \"19\", \"14… #> $ consent           <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\" #> $ name              <chr> \"Paul Ellis\", \"Lyndon Riley\", \"Vivian Fowler\", \"Tara… #> $ age               <chr> \"28\", \"26\", \"24\", \"30\", \"24\", \"42\", \"61\", \"27\", \"24\"… #> $ best_jollof       <chr> \"6\", \"2\", \"6\", \"5\", \"2\", \"7\", \"1\", \"3\", \"7\", \"6\", \"5\" #> $ recommend_kenya_3 <chr> \"1\", NA, NA, \"1\", \"1\", NA, NA, NA, NA, \"1\", NA #> $ recommend_kenya_2 <chr> \"1\", \"1\", NA, NA, \"1\", NA, NA, NA, NA, \"1\", NA #> $ instanceID        <chr> \"uuid:b86c516f-f5e0-4fdb-a9ba-a4b520b618bc\", \"uuid:1… #> $ formdef_version   <chr> \"2404261409\", \"2404261409\", \"2404261415\", \"240426141… #> $ review_status     <chr> \"APPROVED\", \"APPROVED\", \"APPROVED\", \"APPROVED\", \"APP… #> $ KEY               <chr> \"uuid:b86c516f-f5e0-4fdb-a9ba-a4b520b618bc\", \"uuid:1… #> $ recommend_kenya_8 <chr> NA, \"1\", NA, \"1\", NA, NA, NA, NA, NA, \"1\", NA #> $ recommend_kenya_6 <chr> NA, \"1\", \"1\", NA, NA, NA, NA, \"1\", NA, \"1\", NA #> $ recommend_kenya_5 <chr> NA, NA, \"1\", \"1\", NA, NA, \"1\", NA, NA, \"1\", NA qnr <- scto_form(\"demo_for_github\") names(qnr) #> [1] \"settings\"                        \"choices\"                         #> [3] \"fields\"                          \"formulasConvertedToStaticValues\" lapply(qnr, class) #> $settings #> [1] \"data.table\" \"data.frame\" #>  #> $choices #> [1] \"data.table\" \"data.frame\" #>  #> $fields #> [1] \"data.table\" \"data.frame\" #>  #> $formulasConvertedToStaticValues #> [1] \"logical\" df_choices <- read_choices(qnr) |> glimpse() #> Rows: 19 #> Columns: 5 #> $ list_name <chr> \"yesno\", \"yesno\", \"jollofrice\", \"jollofrice\", \"jollofrice\", … #> $ value     <chr> \"1\", \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"1\", \"2\", \"3\", … #> $ label     <chr> \"Yes\", \"No\", \"Senegal\", \"Gambia, The\", \"Ghana\", \"Nigeria\", \"… #> $ image     <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", … #> $ filter    <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", … df_questions <- read_questions(qnr) |> glimpse() #> Rows: 19 #> Columns: 23 #> $ type               <chr> \"start\", \"end\", \"deviceid\", \"phonenumber\", \"calcula… #> $ name               <chr> \"starttime\", \"endtime\", \"deviceid\", \"devicephonenum… #> $ label              <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"Welcome to the sample … #> $ hint               <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",… #> $ default            <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",… #> $ appearance         <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"intro\", \"\", \"quickcomp… #> $ constraint         <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",… #> $ constraint_message <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",… #> $ relevance          <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"${cons… #> $ disabled           <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",… #> $ required           <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"yes\", \"\", \"\", … #> $ required_message   <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",… #> $ read_only          <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",… #> $ calculation        <chr> \"\", \"\", \"\", \"\", \"device-info()\", \"duration()\", \"\", … #> $ repeat_count       <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",… #> $ media_image        <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",… #> $ media_audio        <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",… #> $ media_video        <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",… #> $ choice_filter      <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",… #> $ note               <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"(Group… #> $ response_note      <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"O\", \"\", \"\", \"\"… #> $ publishable        <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",… #> $ minimum_seconds    <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\",… cat(\"Labeling single select questions, question text as the attribute `label`.\") #> Labeling single select questions, question text as the attribute `label`. df <- singsel_label(df, thefields = df_questions) #> Prepare a list of variable labels. cat(\"Labeling multiple select questions, question text and response value as the attribute `label`.\") #> Labeling multiple select questions, question text and response value as the attribute `label`. df <- multisel_label(df, thefields = df_questions, thechoices = df_choices) #> Loaded multiselect quetions.  #> Generated the list of variable labels for multiselect columns. cat(\"Converting single select questions to factors.\") #> Converting single select questions to factors. df <- singsel_asfactor(df, thefields = df_questions, thechoices = df_choices) #> Loaded choices cat(\"Converting multi select questions to integers.\") #> Converting multi select questions to integers. df <- multisel_levels(df, thefields = df_questions, thechoices = df_choices) #> Loaded multiselect quetions. cat(\"Labeling single select questions, question text as the attribute `label`.\") #> Labeling single select questions, question text as the attribute `label`. df <- singsel_label(df, thefields = df_questions) #> Prepare a list of variable labels. cat(\"Labeling multiple select questions, question text and response value as the attribute `label`.\") #> Labeling multiple select questions, question text and response value as the attribute `label`. df <- multisel_label(df, thefields = df_questions, thechoices = df_choices) #> Loaded multiselect quetions.  #> Generated the list of variable labels for multiselect columns."},{"path":"https://benmazzotta.github.io/sctofactorgen/articles/sctofactorgen.html","id":"explore","dir":"Articles","previous_headings":"SurveyCTO Factor Generator","what":"Explore","title":"sctofactorgen","text":"Nice tidy. ▪","code":"glimpse(df) #> Rows: 11 #> Columns: 25 #> $ CompletionDate     <dttm> 2024-04-26 18:13:43, 2024-04-26 18:15:51, 2024-04-… #> $ SubmissionDate     <dttm> 2024-04-26 18:13:43, 2024-04-26 18:15:51, 2024-04-… #> $ starttime          <dttm> 2024-04-26 18:13:19, 2024-04-26 18:13:45, 2024-04-… #> $ endtime            <dttm> 2024-04-26 18:13:42, 2024-04-26 18:15:51, 2024-04-… #> $ deviceid           <chr> \"(web)\", \"(web)\", \"(web)\", \"(web)\", \"(web)\", \"(web)… #> $ device_info        <chr> \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWeb… #> $ duration           <chr> \"23\", \"126\", \"18\", \"22\", \"16\", \"18\", \"17\", \"19\", \"1… #> $ consent            <fct> Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Y… #> $ name               <chr> \"Paul Ellis\", \"Lyndon Riley\", \"Vivian Fowler\", \"Tar… #> $ age                <chr> \"28\", \"26\", \"24\", \"30\", \"24\", \"42\", \"61\", \"27\", \"24… #> $ best_jollof        <fct> \"Sierra Leone\", \"Gambia, The\", \"Sierra Leone\", \"Lib… #> $ recommend_kenya_3  <dbl> 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0 #> $ recommend_kenya_2  <dbl> 1, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0 #> $ instanceID         <chr> \"uuid:b86c516f-f5e0-4fdb-a9ba-a4b520b618bc\", \"uuid:… #> $ formdef_version    <chr> \"2404261409\", \"2404261409\", \"2404261415\", \"24042614… #> $ review_status      <chr> \"APPROVED\", \"APPROVED\", \"APPROVED\", \"APPROVED\", \"AP… #> $ KEY                <chr> \"uuid:b86c516f-f5e0-4fdb-a9ba-a4b520b618bc\", \"uuid:… #> $ recommend_kenya_8  <dbl> 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0 #> $ recommend_kenya_6  <dbl> 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0 #> $ recommend_kenya_5  <dbl> 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0 #> $ recommend_kenya_1  <dbl> 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 #> $ recommend_kenya_9  <dbl> 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 #> $ recommend_kenya_4  <dbl> 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0 #> $ recommend_kenya_7  <dbl> 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0 #> $ recommend_kenya_97 <dbl> 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 labelled::get_variable_labels(df) |> enframe() |> unnest(value) |> knitr::kable() str(df) #> Classes 'data.table' and 'data.frame':   11 obs. of  25 variables: #>  $ CompletionDate    : POSIXct, format: \"2024-04-26 18:13:43\" \"2024-04-26 18:15:51\" ... #>  $ SubmissionDate    : POSIXct, format: \"2024-04-26 18:13:43\" \"2024-04-26 18:15:51\" ... #>  $ starttime         : POSIXct, format: \"2024-04-26 18:13:19\" \"2024-04-26 18:13:45\" ... #>  $ endtime           : POSIXct, format: \"2024-04-26 18:13:42\" \"2024-04-26 18:15:51\" ... #>  $ deviceid          : chr  \"(web)\" \"(web)\" \"(web)\" \"(web)\" ... #>  $ device_info       : chr  \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36\"| __truncated__ \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36\"| __truncated__ \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36\"| __truncated__ \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36\"| __truncated__ ... #>  $ duration          : chr  \"23\" \"126\" \"18\" \"22\" ... #>  $ consent           : Factor w/ 2 levels \"No\",\"Yes\": 2 2 2 2 2 2 2 2 2 2 ... #>   ..- attr(*, \"label\")= chr \"Would you like to continue?\" #>  $ name              : chr  \"Paul Ellis\" \"Lyndon Riley\" \"Vivian Fowler\" \"Tara Murray\" ... #>   ..- attr(*, \"label\")= chr \"What is your name?\" #>  $ age               : chr  \"28\" \"26\" \"24\" \"30\" ... #>   ..- attr(*, \"label\")= chr \"How old are you?\" #>  $ best_jollof       : Factor w/ 7 levels \"Senegal\",\"Gambia, The\",..: 6 2 6 5 2 7 1 3 7 6 ... #>   ..- attr(*, \"label\")= chr \"Which country makes the best jollof rice?\" #>  $ recommend_kenya_3 : num  1 0 0 1 1 0 0 0 0 1 ... #>   ..- attr(*, \"label\")= chr \"On your first visit to Kenya, which foods should you try? ~ Nyama Choma\" #>  $ recommend_kenya_2 : num  1 1 0 0 1 0 0 0 0 1 ... #>   ..- attr(*, \"label\")= chr \"On your first visit to Kenya, which foods should you try? ~ Sukuma Wiki\" #>  $ instanceID        : chr  \"uuid:b86c516f-f5e0-4fdb-a9ba-a4b520b618bc\" \"uuid:1f61c00c-2c82-425e-af6d-4b44ef7b7345\" \"uuid:a80b4daf-abfa-4f37-b248-d79710e9ddb4\" \"uuid:98705aa6-c97a-47c5-b4d4-6356104340b5\" ... #>  $ formdef_version   : chr  \"2404261409\" \"2404261409\" \"2404261415\" \"2404261415\" ... #>  $ review_status     : chr  \"APPROVED\" \"APPROVED\" \"APPROVED\" \"APPROVED\" ... #>  $ KEY               : chr  \"uuid:b86c516f-f5e0-4fdb-a9ba-a4b520b618bc\" \"uuid:1f61c00c-2c82-425e-af6d-4b44ef7b7345\" \"uuid:a80b4daf-abfa-4f37-b248-d79710e9ddb4\" \"uuid:98705aa6-c97a-47c5-b4d4-6356104340b5\" ... #>  $ recommend_kenya_8 : num  0 1 0 1 0 0 0 0 0 1 ... #>   ..- attr(*, \"label\")= chr \"On your first visit to Kenya, which foods should you try? ~ Tilapia Fry\" #>  $ recommend_kenya_6 : num  0 1 1 0 0 0 0 1 0 1 ... #>   ..- attr(*, \"label\")= chr \"On your first visit to Kenya, which foods should you try? ~ Githeri\" #>  $ recommend_kenya_5 : num  0 0 1 1 0 0 1 0 0 1 ... #>   ..- attr(*, \"label\")= chr \"On your first visit to Kenya, which foods should you try? ~ Mutura\" #>  $ recommend_kenya_1 : num  0 0 1 1 0 0 0 0 0 0 ... #>   ..- attr(*, \"label\")= chr \"On your first visit to Kenya, which foods should you try? ~ Ugali\" #>  $ recommend_kenya_9 : num  0 0 1 0 0 0 0 1 0 0 ... #>   ..- attr(*, \"label\")= chr \"On your first visit to Kenya, which foods should you try? ~ Pilau\" #>  $ recommend_kenya_4 : num  0 0 0 1 0 0 0 0 0 0 ... #>   ..- attr(*, \"label\")= chr \"On your first visit to Kenya, which foods should you try? ~ Chips Mayai\" #>  $ recommend_kenya_7 : num  0 0 0 1 0 0 0 0 1 1 ... #>   ..- attr(*, \"label\")= chr \"On your first visit to Kenya, which foods should you try? ~ Mandazi\" #>  $ recommend_kenya_97: num  0 0 0 0 0 1 0 0 0 0 ... #>   ..- attr(*, \"label\")= chr \"On your first visit to Kenya, which foods should you try? ~ I can't choose\" #>  - attr(*, \".internal.selfref\")=<externalptr>  #>  - attr(*, \"scto_type\")= chr \"form\" select(df, where(is.factor)) |> map(~janitor::tabyl(.) |> janitor::adorn_pct_formatting() |> arrange(-n)) #> $consent #>    .  n percent #>  Yes 11  100.0% #>   No  0    0.0% #>  #> $best_jollof #>             . n percent #>  Sierra Leone 3   27.3% #>   Gambia, The 2   18.2% #>       Liberia 2   18.2% #>      Cameroon 2   18.2% #>       Senegal 1    9.1% #>         Ghana 1    9.1% #>       Nigeria 0    0.0% select(df, where(is.numeric)) |> map(~janitor::tabyl(.) |> janitor::adorn_pct_formatting()) #> $recommend_kenya_3 #>  . n percent #>  0 7   63.6% #>  1 4   36.4% #>  #> $recommend_kenya_2 #>  . n percent #>  0 7   63.6% #>  1 4   36.4% #>  #> $recommend_kenya_8 #>  . n percent #>  0 8   72.7% #>  1 3   27.3% #>  #> $recommend_kenya_6 #>  . n percent #>  0 7   63.6% #>  1 4   36.4% #>  #> $recommend_kenya_5 #>  . n percent #>  0 7   63.6% #>  1 4   36.4% #>  #> $recommend_kenya_1 #>  . n percent #>  0 9   81.8% #>  1 2   18.2% #>  #> $recommend_kenya_9 #>  . n percent #>  0 9   81.8% #>  1 2   18.2% #>  #> $recommend_kenya_4 #>  .  n percent #>  0 10   90.9% #>  1  1    9.1% #>  #> $recommend_kenya_7 #>  . n percent #>  0 8   72.7% #>  1 3   27.3% #>  #> $recommend_kenya_97 #>  . n percent #>  0 9   81.8% #>  1 2   18.2%"},{"path":"https://benmazzotta.github.io/sctofactorgen/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Benjamin Mazzotta. Maintainer.","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mazzotta B (2024). sctofactorgen: Convert SurveyCTO Labels R Factors. R package version 0.1.1, https://benmazzotta.github.io/sctofactorgen/.","code":"@Manual{,   title = {sctofactorgen: Convert SurveyCTO Labels to R Factors},   author = {Benjamin Mazzotta},   year = {2024},   note = {R package version 0.1.1},   url = {https://benmazzotta.github.io/sctofactorgen/}, }"},{"path":"https://benmazzotta.github.io/sctofactorgen/index.html","id":"welcome-","dir":"","previous_headings":"","what":"Welcome","title":"Convert SurveyCTO Labels to R Factors","text":"package extends functionality rsurveycto .","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/index.html","id":"why","dir":"","previous_headings":"","what":"Why","title":"Convert SurveyCTO Labels to R Factors","text":"R, ’s nice work factor variables data labels. things already coded SurveyCTO. dead easy get back data frames structure coded SurveyCTO. ’s sctofactorgen .","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/index.html","id":"how-it-works","dir":"","previous_headings":"","what":"How it works","title":"Convert SurveyCTO Labels to R Factors","text":"rsurveycto facilitates data download via SurveyCTO’s API. files available package (1) survey data (2) forms data collection. CSV data files contain labels correspond text questions responses form. Yet can download precisely labels factor levels need via API.","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/index.html","id":"what-it-does","dir":"","previous_headings":"","what":"What it does","title":"Convert SurveyCTO Labels to R Factors","text":"package creates factors single- multi-select response questions. creates variable labels corresponding question label survey form. first version package yet handle translations repeated question groups. anticipates single language single question label single value label every question survey. Users encouraged read rsurveycto package learn authentication process accessing survey data. Users also encouraged practice downloading questionnaire forms survey data SurveyCTO’s server desktop software learn structure files.","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/index.html","id":"the-contribution","dir":"","previous_headings":"","what":"The contribution","title":"Convert SurveyCTO Labels to R Factors","text":"package intended improve existing workflows R. Without package, R users can obtain CSV files Rsurveycto package. can download unlabeled CSV Excel scripts require custom R code label clean. can download labeled data files formats SPSS Stata. Due minor differences variable naming labeling conventions packages R, preferable labeled data files created directly R, without converting formats.","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/index.html","id":"enjoy","dir":"","previous_headings":"","what":"Enjoy","title":"Convert SurveyCTO Labels to R Factors","text":"Thanks checking package!","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/check_scto_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the SurveyCTO API has been authorized and stored as auth — check_scto_api","title":"Check the SurveyCTO API has been authorized and stored as auth — check_scto_api","text":"Check SurveyCTO API authorized stored auth","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/check_scto_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the SurveyCTO API has been authorized and stored as auth — check_scto_api","text":"","code":"check_scto_api(.auth = auth)"},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/check_scto_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the SurveyCTO API has been authorized and stored as auth — check_scto_api","text":".auth authorization block {rsurveycto::scto_auth}","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/check_scto_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the SurveyCTO API has been authorized and stored as auth — check_scto_api","text":"boolean","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/check_scto_api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the SurveyCTO API has been authorized and stored as auth — check_scto_api","text":"","code":"NULL #> NULL"},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/multisel_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply variable labels to multiselects — multisel_label","title":"Apply variable labels to multiselects — multisel_label","text":"Multiselects complicated. store responses questions across multiple columns. function applies one label column, indicating question text (label) response (label). character strings concatenated tilde ~ separator. , process labels first apply columns response data. point, like ability provide user choice whether dummy variables {0,1}, missing values, {NA, 1}, booleans {F, T}.","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/multisel_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply variable labels to multiselects — multisel_label","text":"","code":"multisel_label(surveydata, thefields, thechoices)"},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/multisel_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply variable labels to multiselects — multisel_label","text":"surveydata tibble survey data processed scto_responses thefields tibble survey fields processed read_questions thechoices tibble choices processed read_choices","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/multisel_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply variable labels to multiselects — multisel_label","text":"tibble variable labels column multiple_select question","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/multisel_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply variable labels to multiselects — multisel_label","text":"","code":"NULL #> NULL"},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/multisel_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert multi select variables to factors — multisel_levels","title":"Convert multi select variables to factors — multisel_levels","text":"Convert multi select variables factors","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/multisel_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert multi select variables to factors — multisel_levels","text":"","code":"multisel_levels(surveydata, thefields, thechoices, na_value = \"zero\")"},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/multisel_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert multi select variables to factors — multisel_levels","text":"surveydata tibble survey data processed scto_responses thefields tibble survey fields processed read_questions thechoices tibble choices processed read_choices na_value character string, one \"zero\", \"boolean\", \"NA\"","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/multisel_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert multi select variables to factors — multisel_levels","text":"tibble survey data single select variables variable labels label attribute","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/multisel_levels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert multi select variables to factors — multisel_levels","text":"","code":"NULL #> NULL"},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/read_choices.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract response choices from a form definition — read_choices","title":"Extract response choices from a form definition — read_choices","text":"form available SurveyCTO. three parts, including settings, fields, choices. restructure dplyr janitor works nicely packages.","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/read_choices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract response choices from a form definition — read_choices","text":"","code":"read_choices(theform)"},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/read_choices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract response choices from a form definition — read_choices","text":"theform survey form imported scto_form","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/read_choices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract response choices from a form definition — read_choices","text":"tibble response choices named appear XLS form choices","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/read_choices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract response choices from a form definition — read_choices","text":"","code":"NULL #> NULL"},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/read_questions.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the questions from SurveyCTO fields — read_questions","title":"Read the questions from SurveyCTO fields — read_questions","text":"function reads question list SurveyCTO data collection form. form available SurveyCTO. downloaded API, four parts. question list element titled \"fields\". function declass data.table plays nicely dplyr tibble.","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/read_questions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the questions from SurveyCTO fields — read_questions","text":"","code":"read_questions(theform)"},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/read_questions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the questions from SurveyCTO fields — read_questions","text":"theform SurveyCTO form returned scto_form","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/read_questions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the questions from SurveyCTO fields — read_questions","text":"tibble response lists, names, values","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/read_questions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read the questions from SurveyCTO fields — read_questions","text":"","code":"NULL #> NULL"},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/scto_form.html","id":null,"dir":"Reference","previous_headings":"","what":"Get survey forms — scto_form","title":"Get survey forms — scto_form","text":"Get survey form definition specific survey form SurveyCTO via API.  form wrapper rsurveycto::scto_get_form_definitions().","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/scto_form.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get survey forms — scto_form","text":"","code":"scto_form(.formid, .auth = auth)"},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/scto_form.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get survey forms — scto_form","text":".formid character string identifies SurveyCTO form .auth authorization block generated rsurveycto::scto_auth()","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/scto_form.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get survey forms — scto_form","text":"list object corresponds sheets survey form SurveyCTO, typically downloaded XLSX files. Class data.frame data.table. list four elements: settings, choices, fields, formulasConvertedToStaticValues.","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/scto_form.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get survey forms — scto_form","text":"","code":"NULL #> NULL"},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/scto_responses.html","id":null,"dir":"Reference","previous_headings":"","what":"Get survey data — scto_responses","title":"Get survey data — scto_responses","text":"Get survey responses specific survey form SurveyCTO via API.  form wrapper rsurveycto::scto_read().","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/scto_responses.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get survey data — scto_responses","text":"","code":"scto_responses(.formid = formid, .auth = auth)"},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/scto_responses.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get survey data — scto_responses","text":".formid character string identifies SurveyCTO form .auth authorization block generated rsurveycto::scto_auth()","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/scto_responses.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get survey data — scto_responses","text":"data.frame survey responses every column character format. loaded CSV read.csv(..., colClasses=\"\").","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/scto_responses.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get survey data — scto_responses","text":"","code":"NULL #> NULL"},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/singsel_asfactor.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert single select variables to factors — singsel_asfactor","title":"Convert single select variables to factors — singsel_asfactor","text":"Convert single select variables factors","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/singsel_asfactor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert single select variables to factors — singsel_asfactor","text":"","code":"singsel_asfactor(surveydata, thefields, thechoices)"},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/singsel_asfactor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert single select variables to factors — singsel_asfactor","text":"surveydata tibble survey data processed scto_responses thefields tibble survey fields processed read_questions thechoices tibble choices processed read_choices","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/singsel_asfactor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert single select variables to factors — singsel_asfactor","text":"tibble survey data single select variables variable labels label attribute","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/singsel_asfactor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert single select variables to factors — singsel_asfactor","text":"","code":"NULL #> NULL"},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/singsel_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Label single select questions — singsel_label","title":"Label single select questions — singsel_label","text":"Label single select questions","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/singsel_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Label single select questions — singsel_label","text":"","code":"singsel_label(surveydata, thefields)"},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/singsel_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Label single select questions — singsel_label","text":"surveydata tibble survey data processed scto_responses thefields tibble survey fields processed read_questions","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/singsel_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Label single select questions — singsel_label","text":"tibble survey data single select variables variable labels label attribute","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/singsel_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Label single select questions — singsel_label","text":"","code":"NULL #> NULL"},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/validate_labelled.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — validate_labelled","title":"Title — validate_labelled","text":"Title","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/validate_labelled.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — validate_labelled","text":"","code":"validate_labelled(x)"},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/validate_labelled.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — validate_labelled","text":"x object labels attribute","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/validate_labelled.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — validate_labelled","text":"object","code":""},{"path":"https://benmazzotta.github.io/sctofactorgen/reference/validate_labelled.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — validate_labelled","text":"","code":"NULL #> NULL"}]
